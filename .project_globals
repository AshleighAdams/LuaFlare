_G	hook	{}
hook	Add	(name, id, callback)
hook	Remove	(name, id)`  
hook	Call	(name, ...)
hook	PushFatalErrors	()
hook	PopFatalErrors	()

_G	reqs	{}
reqs	AddPattern	(host, url, callback)

_G	Request	(clilent)
_G	Response	(request)
_G	PrintTable	(tbl [, done][, depth])
_G	include	(file)
_G	expects	(type1, ...)

_G	util	{}
util	time	() 
util	ItterateDir	(dir, recursive, callback, ...)
util	DirExists	(dir)
util	Dir	(base_dir, recursive)
util	EnsurePath	(path)

table	Count	(tbl)
table	IsEmpty	(tbl)
table	HasKey	(tbl, key)
table	HasValue	(tbl, value)
table	ToString	(tbl)
table	save	(table [, filename])
table	load	(filename or stringtable)

string	StartsWith	(haystack, needle)
string	EndsWith	(haystack, needle)
string	Replace	(str, what, with)
string	Path	(self)
string	ReplaceLast	(str, what, with)
string	Trim	(str)
string	Split	(self, delimiter)

math	Round	(what, prec)
math	SecureRandom	(min, max)

_G	escape	{}
escape	pattern	(input)`  
escape	html	(input [, strict])
escape	striptags	(input)
escape	sql	(input)
escape	argument	(input)

os	capture	(cmd [, raw])
os	platform	()

_G	script	{}
script	pid	()
script	current_file	([depth])
script	current_path	([depth])
script	local_path	(path)
script	instance_info	()
script	parse_arguments	(args [, shorthands])


# HTML Tags
_G	tags	{}
tags	SECTION	#
tags	NOESCAPE	#
tags	html	#
tags	head	#
tags	body	#
tags	script	#
tags	style	#
tags	link	#
tags	meta	#
tags	title	#
tags	div	#
tags	br	#
tags	img	#
tags	image	#
tags	a	#
tags	p	#
tags	span	#
tags	code	#
tags	h1	#
tags	h2	#
tags	h3	#
tags	b	#
tags	i	#
tags	u	#
tags	pre	#
tags	table	#
tags	ul	#
tags	li	#
tags	tr	#
tags	tc	#
tags	form	#
tags	input	#
tags	textarea	#

# Configor
# Below is to be disabledin the future as it is to be provided via locals support (when implimented)
#_G	configor	{}
configor	loadstring	(string)
configor	loadfile	(path [, create])
configor	savestring	(node)
configor	savefile	(node, path)

#JSON
#_G	json	{}
json	decode	(string [, position [, null]])
json	encode	(object [, state])
json	quotestring	(string)
json	addnewline	(state)
json	use_lpeg	()
json	null	#
json	version	#
json	using_lpeg	#

# HTTP Statuses
#_G	httpstatus	{}
httpstatus	tostring	(number)
httpstatus	reverse_cache	#
httpstatus	fromstring	(string)

# Mimes
#_G	mimetypes	{}
mimetypes	types	#
mimetypes	guess	(path)

# Posix
posix	access	(pathname, mode)
posix	chdir	(path)
posix	chmod	(path, mode)
posix	chown	(path,uid, gid)
posix	crypt	(string, salt)
posix	ctermid	()
posix	dir	(path)
posix	dup	(oldfd[, newfd])
posix	errno	()
posix	exec	(path [, args])
posix	execp	(path [, args])
posix	mkfifo	(path)
posix	files	(path)
posix	fork	()
posix	getcwd	()
posix	getenv	()
posix	getgroup	(gid)
posix	getlogin	()
posix	getpasswd	(user, field)
posix	getprocessid	(type)
posix	getpid	(type)
posix	glob	(pattern)
posix	kill	(pid, signal)
posix	link	(oldpath, newpath[, symbolic])
posix	mkdir	(pathname)
posix	pathconf	(path, name)
posix	pipe	()
posix	putenv	(str)
posix	readlink	(path)
posix	rmdir	(path)
posix	setgid	(gid)
posix	setuid	(uid)
posix	sleep	(seconds)
posix	stat	(path, selector)
posix	times	([type])
posix	ttyname	()
posix	access	([format])
posix	utime	(path, atime, mtime)
posix	wait	(pid)
posix	setenv	(name, value)
posix	unsetenv	(name)

# LuaSocket
#	socket
socket	_DEBUG	#
socket	newtry	(finalizer)
socket	protect	(func)
socket	select	(recvt, sendt [, timeout])
socket	sink	(mode, socket)
socket	skip	(d [, ret1, ...])
socket	sleep	(time)
socket	source	(mode, socket [, length])
socket	gettime	()
socket	_VERSION	#
socket	tcp	()
socket	udp	()
#	dns
socket.dns	gethostname	()
socket.dns	tohostname	()
socket.dns	toip	(address)
# url
url	absolute	(base, relative)
url	build	(parsed_url)
url	build_path	(segments, unsafe)
url	escape	(content)
url	parse	(url, default)
url	parse_path	(path)
url	unescape	(content)

# luasec
ssl	wrap	(conn, params)

# websocket
_G	websocket	{}
websocket	register	(path, protocol, callback)
websocket	registered	{}